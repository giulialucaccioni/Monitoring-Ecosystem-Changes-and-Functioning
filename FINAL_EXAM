# Exploring variability of soil moisture and soil change in Scotland (2017-2024)
# Focus on the southern Highlands (Inverness)

# ----------------
# Summary:
# 01 Preliminary work (importing packages and setting the working directory)
# 02 Soil moisture variation
# 03 Snow coverage variation (NDSI computation)
# ----------------

# 01
# loading previously downloaded packages, if the packages are not installed use install.packages("") 
library(ncdf4)
library(terra)
library(imageRy)
library(ggplot2)
library(patchwork)

# setting the working directory to the folder with the downloaded data
setwd("C:/Users/giuli/Desktop/scotland_analysis")

# ----------------

# 02
# load the raster file for the year 2024 and plot it to see it
soilm2024 <- rast("c_gls_SSM1km_202402240000_CEURO_S1CSAR_V1.2.1__ssm.nc")
plot(soilm2024)

# change the colour so that arid areas are in warm colours and the moister ones are in cooler tones, then plot it again
cl <- colorRampPalette(c("red", "orange", "lightblue")) (100)
plot(soilm2024, col=cl)

# crop the image to the desired area
ext <- c(-5, -1.5, 56, 57.75) 
soilm2024c <- crop(soilm2024, ext) 

# plot the cropped data with the new colour scheme
plot(soilm2024c, col=cl)

# re-do all the previous passages for the year 2017
soilm2017 <- rast("c_gls_SSM1km_201702130000_CEURO_S1CSAR_V1.1.1__ssm.nc")
plot(soilm2017)
soilm2017c<- crop(soilm2017, ext)
plot(soilm2017c, col=cl)

# divide the plotting window into two to create two plots of the soil moisture data one next to the other, then name them
par(mfrow=c(1,2))
plot(soilm2017c, main = "Soil Moisture February 2017", col=cl)
plot(soilm2024c, main = "Soil Moisture February 2024", col=cl)

# remove the division of the plotting window
dev.off()

# create a new colour scheme and calculate visually the difference in soil moisture between the two years, then plot
cld <- colorRampPalette(c("white", "white", "blue")) (100)
soilmdiff <- (soilm2017c-soilm2024c)
plot(soilmdiff, main = "Soil Moisture Difference (2017-2024)", col=cld)
# the blue area corresponds to a decrease in soil moisture from 2017 to 2024

# ----------------

# 03
# load the different bands of the Sentinel-2 data for the year 2024
b2_24 <- rast("T30VVJ_20240229T114349_B02_10m.jp2") #blue
plot(b2_24)

b3_24 <- rast("T30VVJ_20240229T114349_B03_10m.jp2") #green
plot(b3_24)

b4_24 <- rast("T30VVJ_20240229T114349_B04_10m.jp2") #red
plot(b4_24)

b8_24 <- rast("T30VVJ_20240229T114349_B08_10m.jp2") #VNIR
plot(b8_24)

b11_24 <- rast("T30VVJ_20240229T114349_B11_20m.jp2") #SWIR
plot(b11_24)

# re-do everything for the year 2017
b2_17 <- rast("T30VVJ_20170227T113311_B02_10m.jp2") #blue
plot(b2_17)

b3_17 <- rast("T30VVJ_20170227T113311_B03_10m.jp2") #green
plot(b3_17)

b4_17 <- rast("T30VVJ_20170227T113311_B04_10m.jp2") #red
plot(b4_17)

b8_17 <- rast("T30VVJ_20170227T113311_B08_10m.jp2") #VNIR
plot(b8_17)

b11_17 <- rast("T30VVJ_20170227T113311_B11_20m.jp2") #SWIR
plot(b11_17)

# check size
b11_17
b11_24

ext(b11_17) == ext(b11_24)

# change resolution and dimension
b8_24_scaled <- disagg(b8_24, 2)
plot(b8_24_scaled)

b11_17_scaled <- disagg(b11_17, 2)
plot(b11_17_scaled)

b11_24_scaled <- disagg(b11_24, 2)
plot(b11_24_scaled)

# assign new names for NDSI computation
SWIR24 <- b11_24_scaled
SWIR17 <- b11_17_scaled

# calculate NDSI
NDSI24 <- ((b3_24- SWIR24) / (b3_24 + SWIR24))
NDSI24
plot(NDSI24)

col_new <- colorRampPalette(c("darkgreen", "beige","darkgoldenrod1", "darkslateblue"))(100)
plot(NDSI24, col=col_new, main = "Normalized Difference Snow Index (NDSI) 2024" )

NDSI17 <- ((b3_17 - SWIR17) / (b3_17 + SWIR17))
NDSI17
plot(NDSI17)
plot(NDSI17, col=col_new, main= "Normalized Difference Snow Index (NDSI) 2017")

# compute the difference between the two years
diff <- NDSI17 - NDSI24
plot(diff)

col_new2 <- colorRampPalette(c("darkgreen", "bisque", "darkslateblue"))(100)
plot(diff, col=col_new2, main = "NDSI Difference (2017 - 2024)")
# the purple areas indicate a positive difference: this means there was more snow in 2017
# the white areas indicate no significant variations 
# the green ones indicate a negative difference: there was less snow in those areas in 2017 

# plot histograms to see snow frequency in the two years and their difference
hist(NDSI17, col= c("darkslategray2"), main= "Snow frequency in 2017", xlab = "NDSI")
hist(NDSI24, col= c("darkslategray2"), main= "Snow frequency in 2024", xlab = "NDSI")
hist(diff, main = "Differences in Snow coverage", col="deepskyblue4",  xlab = "NDSI Difference")

# define the 3 thresholds
snow_covered <- 0.4
mixture_covered <- 0
no_snow <- (-1:0)

# create binary masks based on the thresholds
snow_mask <- NDSI17 > snow_covered
mixture_mask <- NDSI17 > mixture_covered

# combine the masks to create clusters
clusters17 <- snow_mask + 2 * mixture_mask

# visualize the clusters for the image of 2017
col_clusters <- colorRampPalette(c("darkgreen","bisque", "darkslateblue"))(100)
plot(clusters17, col= col_clusters, main = "Clusters 2017 (Snow, Mixture, Vegetation)")

# same work for 2024
snow_mask24 <- NDSI24 > snow_covered
mixture_mask24 <- NDSI24 > mixture_covered

clusters24 <- snow_mask24 + 2 * mixture_mask24

plot(clusters24, col= col_clusters, main = "Clusters 2024 (Snow, Mixture, Vegetation)")

par(mfrow=c(1,2))
plot(clusters17)
plot(clusters24)

dev.off()

# calculate the frequency and the number of pixels
f2017 <- freq(clusters17)
f2017

# extract the total number of pixels 
tot2017 <- ncell(clusters17)
tot2017

# calculate the percentage by dividing by the total number of pixels 
p2017 <- f2017 * 100 / tot2017
p2017
# snow:30% ; mixture: 24.5% ; no-snow: 45.4%

# calculate the percentage of 2024
f2024 <- freq(clusters24)
f2024

tot2024 <- ncell(clusters24)
tot2024

p2024 <- f2024 * 100 / tot2024
p2024
# snow: 11.7% ; mixture: 31.9% ; no-snow: 53.8%

# build the tables with the percentages 
class <- c("SNOW", "MIXTURE", "VEGETATION")
year_2017 <- c(30, 24.5, 45.4)
year_2024 <- c(11.7, 31.9, 53.8)

# create the final table with data.frame  
table <- data.frame(class, year_2017, year_2024)

# plot the two cluster distributions
p1 <- ggplot(table, aes(x=class, y=year_2017)) +
  geom_bar(stat="identity", fill= c("cornflowerblue", "darksalmon", "chartreuse4")) +
  ggtitle("Cluster Distribution 2017") +
  theme(plot.title = element_text(hjust = 0.5)) +
  ylim(c(0,100))
plot(p1)

p2 <- ggplot(table, aes(x=class, y=year_2024)) +
  geom_bar(stat="identity", fill= c("blue1", "coral2", "chartreuse3")) +
  ggtitle("Cluster Distribution 2024") +
  theme(plot.title = element_text(hjust = 0.5)) +
  ylim(c(0,100))
plot(p2)
